ages=[]
sexs=[]
bmis=[]
children_list=[]
smokers=[]
regions=[]
charges_list=[]

import csv 
with open('insurance.csv',newline='') as insurance_file:
    insurance_file_reader= csv.DictReader(insurance_file, delimiter=',')
    for row in insurance_file_reader:
        ages.append(row['age'])
        sexs.append(row['sex'])
        bmis.append(row['bmi'])
        children_list.append(row['children'])
        smokers.append(row['smoker'])
        regions.append(row['region'])
        charges_list.append(row['charges'])
class Patient_Info:
    def __init__(self, ages, sexs, bmis, children_list, smokers, regions, charges_list):
        self.ages= ages
        self.sexs= sexs
        self.bmis= bmis
        self.children_list= children_list
        self.smokers= smokers
        self.regions= regions
        self.charges_list= charges_list
    def analyse_ages(self):
        total_ages= 0 
        for age in self.ages:
            total_ages += int(age)
        print("Average Patient Ages: " + str(round(total_ages/len(self.ages),2)) +"years")
    def analyse_sexs(self):
        females= 0
        males= 0
        for sex in self.sexs:
            if sex == 'female':
                females += 1
            else: 
                males += 1
        print('Count for Females: ', females)
        print('Count for Males: ', males)
    def analyse_unique_regions(self):
        unique_regions=[]
        for region in self.regions:
            if region not in unique_regions:
                unique_regions.append(region)
        print(unique_regions)
    def analyse_charges(self):
        total_charges= 0
        for charge in self.charges_list:
            total_charges += float(charge)
        print('Average Patient Charges: '+ str(round(total_charges/len(self.charges_list),2))+ 'dollars')
    
    def create_dictionary(self):
        self.patients_dictionary = {}
        self.patients_dictionary["age"] = [int(age) for age in self.ages]
        self.patients_dictionary["sex"] = self.sexes
        self.patients_dictionary["bmi"] = self.bmis
        self.patients_dictionary["children"] = self.children_list
        self.patients_dictionary["smoker"] = self.smokers
        self.patients_dictionary["regions"] = self.regions
        self.patients_dictionary["charges"] = self.charges_list
        return self.patients_dictionary
    patient_info = Patient_Info(ages, sexs, bmis, children_list, smokers, regions, charges_list)
    patient_info.analyse_ages()
    patient_info.analyse_sexs()
    patient_info.analyse_unique_regions()
    patient_info.analyse_charges()
